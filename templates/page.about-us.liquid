<main class="db-main site-main db-page--about-us">
  <section class="db-section db-section--about-us-banner">
    <div class="db-container">
      <div class="title-wrap">

        <h1>
          <span>
            HELL YEAH
          </span>

          <span>
            WE ARE
          </span>
        </h1>

        <h4>
          Welcome to the world of deadbeat, Deadbeat is a transmedia story centered around a radio station in the year 2069, where the undead rule the world.
        </h4>

      </div>

      <div class="db-row">
        <div class="db-col-spacer">
          <div class="db-col">
            <div class="db-logo-container">
              <img src="{{ 'About-Us__asset-DB-logo.png' | asset_url }}" alt="Deadbeats Logo">
            </div>
          </div>

          <div class="db-col">
            <div class="db-banner-its-year">
              IT’S YEAR
            </div>
            <div class="db-banner-content-block">
              <div class="db-banner-2069">
                2069
              </div>

              <div class="db-banner-and">
                <span>
                  A
                </span>
                <span>
                  N
                </span>
                <span>
                  D
                </span>
              </div>

              <div class="db-banner-rock-the-world">
                Undead rock the world
              </div>
            </div>

            <div class="db-banner-featured">
              
              <div class="db-banner-featured-item">
                <div class="featured-item-content">
                  <div class="featured-item-title">
                    MARKETPLACE
                  </div>

                  <div class="featured-item-description">
                    Lorem ipsum dolor sit amet consec
                  </div>
                </div>

                <div class="featured-item-image">
                  <img src="{{ 'About-Us__asset-banner-v02.png' | asset_url }}" alt="">
                  <img src="{{ 'About-Us__asset-featured-mb.png' | asset_url }}" alt="">
                </div>
              </div>

              <div class="db-banner-featured-item">
                <div class="featured-item-content">
                  <div class="featured-item-title">
                    NFT COLLECTIONS
                  </div>

                  <div class="featured-item-description">
                    Lorem ipsum dolor sit amet consec
                  </div>
                </div>

                <div class="featured-item-image">
                  <img src="{{ 'About-Us__asset-banner-v02.png' | asset_url }}" alt="">
                  <img src="{{ 'About-Us__asset-featured-mb.png' | asset_url }}" alt="">
                </div>
              </div>

            </div>
          </div>
        </div>
      </div>
    </div>
  </section>

  <section class="db-section db-section--about-us-after-life">
    <div class="db-background-overlay"></div>
    <div class="db-container">  
      <div class="title-wrap">
        <h2>
          THE AFTER, AFTER LIFE
        </h2>
      </div>

      <div class="db-row">
        <div class="db-col">
          <div class="db-inner-row">
            Welcome to BEAT 96.9, a once great independent radio station, struggling to stay alive in the world of the undead. This new animated show follows the lives of the station’s re-animated crew as they manage their post-apocalyptic lives. 
          </div>

          <div class="db-inner-row">
            Welcome to BEAT 96.9, a once great independent radio station, struggling to stay alive in the world of the undead. This new animated show follows the lives of the station’s re-animated crew as they manage their post-apocalyptic lives. The show’s setting will allow for a broad array of colorful characters, transient guests, and somewhat live performances from the new world’s up-and-coming bands trying to bring their music and careers to life.
          </div>

          <div class="db-inner-row">
            Welcome to BEAT 96.9, a once great independent radio station, struggling to stay alive in the world of the undead. This new animated show follows the lives of the station’s re-animated crew as they manage their post-apocalyptic lives. 
          </div>


        </div>

        <div class="db-col" v-if="!isMobile">

          <div class="db-the-natives-title">
            <h3>
              <span>
                THE STORY:
              </span>

              <span>
                THE NATIVES
              </span>
            </h3>

            <h3>
              Main Characters
            </h3>
            
          </div>

          <div class="wrapper" ref="wrapper" @mouseenter="clearCurTimeout">
            <ul class="carousel" ref="carousel" @scroll="onInfiniteScroll" @mousedown="onDragStart($event)" @mousemove="onDragging($event)">

              <li class="native-card">
                <div class="card-wrapper">
                  <div class="db-natives-image-container">
                   <div class="db-natives-image">
                    <img src="{{ 'About-Us__asset-natives-v01.png' | asset_url }}" alt="" draggable="true" @dragstart="onPreventDrag($event)">
                    <img src="{{ 'About-Us__asset-mb-natives-v02.png' | asset_url }}" alt="" draggable="true" @dragstart="onPreventDrag($event)">
                  </div>
                  </div>

                  <div class="db-natives-profile">
                    <div class="db-native-name">
                      EVILIA GRIMSHAW
                    </div>

                    <div class="db-native-description">
                      Soul-sucking’ station programmer.  Known lovingly at the station as Little Miss Evil, Evilia’s sarcasm, bottom-line attitude and biting wit often clashes with Roger’s rebellious spirit creating a constant source of comedic conflict.
                    </div>
                  </div>
                </div>
              </li>

              <li class="native-card">
                <div class="card-wrapper">
                  <div class="db-natives-image-container">
                  <div class="db-natives-image">
                    <img src="{{ 'About-Us__asset-natives-v02.png' | asset_url }}" alt="" draggable="true" @dragstart="onPreventDrag($event)">
                    <img src="{{ 'About-Us__asset-mb-natives-v02.png' | asset_url }}" alt="" draggable="true" @dragstart="onPreventDrag($event)">
                  </div>
                  </div>

                  <div class="db-natives-profile">
                    <div class="db-native-name">
                      CHAZ NITELY
                    </div>

                    <div class="db-native-description">
                      Late night talk-show host whose topics often center around Apocalypse Conspiracy Theories, Alien Encounters, and Government Cover-ups. Chaz has a huge following as well as a huge ego that barely fits into the rundown studio.
                    </div>
                  </div>
                </div>
                
              </li>

              <li class="native-card">
                <div class="card-wrapper">
                  <div class="db-natives-image-container">
                    <div class="db-natives-image">
                      <img src="{{ 'About-Us__asset-natives-v03.png' | asset_url }}" alt="" draggable="true" @dragstart="onPreventDrag($event)">
                      <img src="{{ 'About-Us__asset-mb-natives-v03.png' | asset_url }}" alt="" draggable="true" @dragstart="onPreventDrag($event)">
                    </div>
                  </div>

                  <div class="db-natives-profile">
                    <div class="db-native-name">
                      HARMONY BRIGGS
                    </div>

                    <div class="db-native-description">
                      The new-to-town station programmer. Harmony is a somewhat mysterious and enigmatic figure that’s breathed a new life into the musty radio station as well as Roger.
                    </div>
                  </div>
                </div> 
              </li>
            </ul>
          </div>

          <div class="db-buttons-slider">
            <div class="buttons" ref="buttons">

              <svg xmlns="http://www.w3.org/2000/svg" width="12" height="21" viewBox="0 0 12 21" fill="none" class="svg-icon-prev db-svg" id="left" @click="onChangeSlider('left')" >
                <path d="M0 10.9646C0 11.4615 0.248704 11.9584 0.497409 12.2068L8.70466 20.4056C9.45078 21.1509 10.6943 21.1509 11.4404 20.4056C12.1865 19.6603 12.1865 18.418 11.4404 17.6727L4.72539 10.9646L11.4404 4.25653C12.1865 3.51118 12.1865 2.26895 11.4404 1.52361C10.6943 0.778263 9.45078 0.778263 8.70466 1.52361L0.746114 9.47392C0.248705 9.97081 0 10.4677 0 10.9646Z" fill="#CAC7D0" :style="{fillOpacity: inActiveButton !== 'left' ? 0.4 : ''}"/>
              </svg>

              <svg xmlns="http://www.w3.org/2000/svg" width="12" height="21" viewBox="0 0 12 21" fill="none" class="svg-icon-next db-svg" id="right" @click="onChangeSlider('right')">
                <path d="M12 10.9646C12 11.4615 11.7513 11.9584 11.5026 12.2068L3.29534 20.4056C2.54922 21.1509 1.3057 21.1509 0.559586 20.4056C-0.186529 19.6603 -0.186529 18.418 0.559586 17.6727L7.27461 10.9646L0.559586 4.25653C-0.186529 3.51118 -0.186529 2.26895 0.559586 1.52361C1.3057 0.778263 2.54922 0.778263 3.29534 1.52361L11.2539 9.47392C11.7513 9.97081 12 10.4677 12 10.9646Z" fill="#CAC7D0" :style="{fillOpacity: inActiveButton !== 'right' ? 0.4 : ''}"/>
              </svg>
            </div>
          </div>

        </div> 
      </div>
    </div>
  </section>

  <section class="db-section db-section--about-us-mb-slider" v-if="isMobile">
    <div class="db-container">
      <div class="db-row">
        <div class="db-the-natives-title">
            <h3>
              <span>
                THE STORY:
              </span>

              <span>
                THE NATIVES
              </span>
            </h3>

            <h3>
              Main Characters
            </h3>
            
        </div>

        <div class="wrapper" ref="secondaryWrapper">
          <ul class="carousel" ref="secondaryCarousel">
            <li class="native-card">
                <div class="card-wrapper">
                  <div class="db-natives-image-container">
                   <div class="db-natives-image">
                    <img src="{{ 'About-Us__asset-natives-v01.png' | asset_url }}" alt="" draggable="true" @dragstart="onPreventDrag($event)">
                    <img src="{{ 'About-Us__asset-mb-natives-v02.png' | asset_url }}" alt="" draggable="true" @dragstart="onPreventDrag($event)">
                  </div>
                  </div>

                  <div class="db-natives-profile">
                    <div class="db-native-name">
                      EVILIA GRIMSHAW
                    </div>

                    <div class="db-native-description">
                      Soul-sucking’ station programmer.  Known lovingly at the station as Little Miss Evil, Evilia’s sarcasm, bottom-line attitude and biting wit often clashes with Roger’s rebellious spirit creating a constant source of comedic conflict.
                    </div>
                  </div>
                </div>
            </li>

            <li class="native-card">
                <div class="card-wrapper">
                  <div class="db-natives-image-container">
                  <div class="db-natives-image">
                    <img src="{{ 'About-Us__asset-natives-v02.png' | asset_url }}" alt="" draggable="true" @dragstart="onPreventDrag($event)">
                    <img src="{{ 'About-Us__asset-mb-natives-v02.png' | asset_url }}" alt="" draggable="true" @dragstart="onPreventDrag($event)">
                  </div>
                  </div>

                  <div class="db-natives-profile">
                    <div class="db-native-name">
                      CHAZ NITELY
                    </div>

                    <div class="db-native-description">
                      Late night talk-show host whose topics often center around Apocalypse Conspiracy Theories, Alien Encounters, and Government Cover-ups. Chaz has a huge following as well as a huge ego that barely fits into the rundown studio.
                    </div>
                  </div>
                </div>
                
            </li>

            <li class="native-card">
                <div class="card-wrapper">
                  <div class="db-natives-image-container">
                    <div class="db-natives-image">
                      <img src="{{ 'About-Us__asset-natives-v03.png' | asset_url }}" alt="" draggable="true" @dragstart="onPreventDrag($event)">
                      <img src="{{ 'About-Us__asset-mb-natives-v03.png' | asset_url }}" alt="" draggable="true" @dragstart="onPreventDrag($event)">
                    </div>
                  </div>

                  <div class="db-natives-profile">
                    <div class="db-native-name">
                      HARMONY BRIGGS
                    </div>

                    <div class="db-native-description">
                      The new-to-town station programmer. Harmony is a somewhat mysterious and enigmatic figure that’s breathed a new life into the musty radio station as well as Roger.
                    </div>
                  </div>
                </div> 
            </li>
          </ul>
        </div>

        <div class="db-buttons-slider">
            <div class="buttons" ref="buttons">

              <svg xmlns="http://www.w3.org/2000/svg" width="12" height="21" viewBox="0 0 12 21" fill="none" class="svg-icon-prev db-svg" id="left" @click="onChangeMbSlider('left')" >
                <path d="M0 10.9646C0 11.4615 0.248704 11.9584 0.497409 12.2068L8.70466 20.4056C9.45078 21.1509 10.6943 21.1509 11.4404 20.4056C12.1865 19.6603 12.1865 18.418 11.4404 17.6727L4.72539 10.9646L11.4404 4.25653C12.1865 3.51118 12.1865 2.26895 11.4404 1.52361C10.6943 0.778263 9.45078 0.778263 8.70466 1.52361L0.746114 9.47392C0.248705 9.97081 0 10.4677 0 10.9646Z" fill="#CAC7D0" :style="{fillOpacity: inActiveButton !== 'left' ? 0.4 : ''}"/>
              </svg>

              <svg xmlns="http://www.w3.org/2000/svg" width="12" height="21" viewBox="0 0 12 21" fill="none" class="svg-icon-next db-svg" id="right" @click="onChangeMbSlider('right')">
                <path d="M12 10.9646C12 11.4615 11.7513 11.9584 11.5026 12.2068L3.29534 20.4056C2.54922 21.1509 1.3057 21.1509 0.559586 20.4056C-0.186529 19.6603 -0.186529 18.418 0.559586 17.6727L7.27461 10.9646L0.559586 4.25653C-0.186529 3.51118 -0.186529 2.26895 0.559586 1.52361C1.3057 0.778263 2.54922 0.778263 3.29534 1.52361L11.2539 9.47392C11.7513 9.97081 12 10.4677 12 10.9646Z" fill="#CAC7D0" :style="{fillOpacity: inActiveButton !== 'right' ? 0.4 : ''}"/>
              </svg>
            </div>
        </div>
      </div>
    </div>
  </section>

  <section class="db-section db-section--spacer"></section>

  {% comment %} <section class="db-section db-section--about-us-resurrection">
    <div class="db-container">
      <div class="db-row">

        <div class="db-col">
          <div class="title-wrap">
            Your entry point to the Deadbeat World
          </div>

          <div class="db-cards-image-container">
            <div class="db-cards-image">
              <img src="{{ 'About_Us_asset-resurrection-v01.png' | asset_url }}" alt="">
            </div>

            <div class="db-cards-image">
                <img src="{{ 'About_Us_asset-resurrection-v02.png' | asset_url }}" alt="">
            </div>
          </div>
        </div>

        <div class="db-col">
          <h3>
            RESURRECTION ANTHEMS
          </h3>

          <div class="db-resurrection-description">
            Each NFT consists of individual, layered music stems that combine into a single, cohesive beat
          </div>

          <div class="db-resurrection-content-block">
            <p>
              Resurrection Anthems are the initial Deadbeat collection drop. Each NFT consists of individual, layered music stems that combine into a single, cohesive beat.
            </p>

            <p>
              Individual stems are swappable between owned NFTs, allowing the holder to mix their ideal Anthems. Once satisfied with the mix, the Anthem can be Soulbound to enter the mint experience for customizable Undead characters.
            </p>

            <p>
              Anthems are sellable or tradable until Soulbound. Collection is deflationary.
            </p>
          </div>

          <div class="db-resurrection-cta">
            <button class="db-btn">
              BUY NOW
            </button>

            <a href="">

              <span>
                VIEW COLLECTIONS
              </span>

              <svg xmlns="http://www.w3.org/2000/svg" width="160" height="2" viewBox="0 0 160 2" fill="none">
                <path d="M1 1H159.5" stroke="white" stroke-linecap="round"/>
              </svg>
            </a>
          </div>
        </div>
      </div>
    </div>
  </section>

  <section class="db-section db-section--about-us-elevate">
    <div class="db-container">
      <div class="db-row">
        <div class="db-col">

          <h4>
            The Company
          </h4>
          <h3>
              ELEVATE PICTURES
          </h3>
        </div>

        <div class="db-col">
          <div class="db-image-container">
            <img src="{{ 'About-Us__asset-elevate-v01.png' | asset_url }}" alt="">
          </div>

          <div class="db-elevate-description">
            <p>
              Elevate is a transmedia entertainment company chasing simple ideas that can change the world.
              <br />
              <br />
              It means we understand and build ideas that scale across platforms and over time. It means we’re experts in business judo, flipping problems into promise.
            </p>
          </div>

          <div class="db-elevate-connect-with-us">
            <div class="connect-with-us">
              Explore the world of Deadbeat! Connect with us.
            </div>

            <div class="db-elevate-website">
              <span>
                WEBSITE
              </span>

              <a href="https://www.elevatepictures.com/">
                https://www.elevatepictures.com/
              </a>
            </div>
          </div>
        </div>
      </div>
    </div>
  </section>

  <section class="db-section db-section--about-us-subscribe">
    <div class="db-container">
      <div class="db-row">
        <div class="db-col">
          <img src="{{ 'About-Us__asset-subscribe-v01.png' | asset_url }}" />
          <img src="{{ 'About-Us__asset-mb-subscribe-v01.png' | asset_url }}" />
        </div>

        <div class="db-col">

          <div class="subscribe-title">
            <h4>
              CREATE THE STORY WORLD
            </h4>

            <div class="subscribe-benefit">
              Get updated to our exciting promotions, limited offers, articles and resources.
            </div>
          </div>

          <form action="">
            <div class="form-control">
              <input type="email" name="email" id="email" aria-label="email" placeholder="Enter Your Email Address" autocomplete="off" />
              <button>SUBSCRIBE</button>
            </div>

            <svg xmlns="http://www.w3.org/2000/svg" width="607" height="2" viewBox="0 0 607 2" fill="none">
              <path d="M1 1H606" stroke="white" stroke-width="2" stroke-linecap="round"/>
            </svg>
          </form>

        </div>
      </div>
    </div>
  </section> {% endcomment %}

</main>

<script>
  const DB_SF_Page_About_Us_Options = {
    name: 'DB SF Page About Us Options',
    data() {
      return {
        inActiveButton: 'right',
        settingSlider: {
          firstCardWidth:null,
          isDragging: false,
          isAutoPlay: true,
          startX:null,
          startScrollLeft:null,
          sliderX1440:false,
          sliderX1080:false,
          sliderX768:false,
        },
        timeoutId:null,
        isMobile: false,
      }
    },
    created() {

      if (window.innerWidth <= 768) {
        this.isMobile = true
      } else{
        this.isMobile = false
      }
    },
    mounted() {
      console.log('HELLO WORLD MARCO YOU ARE IN VUE');
      const wrapper = this.$refs.wrapper;
      const carousel = this.$refs.carousel;
      const secondaryWrapper = this.$refs.secondaryWrapper;
      const secondaryCarousel = this.$refs.secondaryCarousel;
      let carouselChildren;
      let secondaryCarouselChildren;
      let cardPerView;

      const arrowBtns = this.$refs.buttons.querySelectorAll("svg");
      
      if (window.innerWidth <= 768) {
        secondaryCarouselChildren = [...secondaryCarousel.children];
      } else {
        carouselChildrens = [...carousel.children];
      }
      

      console.log(window.innerWidth);

      const debounce = (func, delay) => {
        let timeoutId;
        return function (...args) {
          clearTimeout(timeoutId);

          timeoutId = setTimeout(() => {
            func.apply(this, args);
          }, delay);
        };
      }

      // change pani
      const handleWindowResize = () => {
      
        console.log(`I am in`)
        if (window.innerWidth > 1441) {
          const carousel = this.$refs.carousel;
          const children = carousel.children;
          const totalChildren = children.length;
          let cardView = null;
          console.log(`I am in the greater window`);
          
          
          this.settingSlider.firstCardWidth = carousel.querySelector(".native-card").offsetWidth + 44;

          carousel.classList.add("no-transition");
          carousel.scrollLeft = carousel.offsetWidth + 44;
          carousel.classList.remove("no-transition");

        }

        if (window.innerWidth >= 1439) {
          const carousel = this.$refs.carousel;
          const children = carousel.children;
          const totalChildren = children.length;
          let cardView = null;
          console.log(`I am in the 1440px window`);
          

          
          this.settingSlider.firstCardWidth = carousel.querySelector(".native-card").offsetWidth + 44;

          cardPerView = Math.round(carousel.offsetWidth / this.settingSlider.firstCardWidth);
          
          if (!this.sliderX1440) {
            
          }

          carousel.classList.add("no-transition");
          carousel.scrollLeft = carousel.offsetWidth + 44;
          carousel.classList.remove("no-transition");

          
        }

        if (window.innerWidth >= 1079) {
          console.log(`I am in the 1080px window`);
          this.isMobile = false;
          const carousel = this.$refs.carousel;
          const children = carousel.children;
          const totalChildren = children.length;

          
          this.settingSlider.firstCardWidth = carousel.querySelector(".native-card").offsetWidth + 44;

          carousel.classList.add("no-transition");
          carousel.scrollLeft = carousel.offsetWidth + 44;
          carousel.classList.remove("no-transition");
        }

        
        if (window.innerWidth > 768) {
          console.log(`I am in the 768px window`);
          this.isMobile = false;
          const carousel = this.$refs.carousel;
          const children = carousel.children;
          const totalChildren = children.length;

          
          this.settingSlider.firstCardWidth = carousel.querySelector(".native-card").offsetWidth + 44;

          carousel.classList.add("no-transition");
          carousel.scrollLeft = carousel.offsetWidth + 44;
          carousel.classList.remove("no-transition");
        }

        if (window.innerWidth <= 768) {
          console.log(`I am in the lower window`);
          this.isMobile = true;
          const carousel = this.$refs.secondaryCarousel;
          const children = carousel.children;
          const totalChildren = children.length;
          

          this.settingSlider.firstCardWidth = carousel.querySelector(".native-card").offsetHeight + 40;

          carousel.classList.add("no-transition");
          carousel.scrollTop = carousel.offsetHeight + 40;
          carousel.classList.remove("no-transition");
        }
        
        
      } 

      if (window.innerWidth <= 768) {
        // Height
        
        this.settingSlider.firstCardWidth = secondaryCarousel.querySelector(".native-card").offsetHeight + 40;
        console.log(this.settingSlider.firstCardWidth);
      } else {
        // Width
        
        this.settingSlider.firstCardWidth = carousel.querySelector(".native-card").offsetWidth + 44;
      }

      // mao ni sya ma change
      // this.settingSlider.firstCardWidth = carousel.querySelector(".native-card").offsetWidth + 44;

      if (window.innerWidth <= 768) {
        // Height
        cardPerView = Math.round(secondaryCarousel.offsetHeight / this.settingSlider.firstCardWidth);
        console.log(cardPerView);
      } else {
        // Width
        cardPerView = Math.round(carousel.offsetWidth / this.settingSlider.firstCardWidth);
      }
      
      // mao ni sya ma change
      // cardPerView = Math.round(carousel.offsetWidth / this.settingSlider.firstCardWidth);
      
      if (window.innerWidth <= 768) {

        secondaryCarouselChildren.slice(-cardPerView).reverse().forEach(card => {
          secondaryCarousel.insertAdjacentHTML("afterbegin", card.outerHTML);
        });

        secondaryCarouselChildren.slice(0, cardPerView).forEach(card => {
            secondaryCarousel.insertAdjacentHTML("beforeend", card.outerHTML);
        });

      } else {

        carouselChildrens.slice(-cardPerView).reverse().forEach(card => {
          carousel.insertAdjacentHTML("afterbegin", card.outerHTML);
        });

        carouselChildrens.slice(0, cardPerView).forEach(card => {
            carousel.insertAdjacentHTML("beforeend", card.outerHTML);
        });

      }

      
      if (window.innerWidth <= 768) {
        // Height
          secondaryCarousel.classList.add("no-transition");
          secondaryCarousel.scrollTop = secondaryCarousel.offsetHeight + 40;
          secondaryCarousel.classList.remove("no-transition");
        } else {
          // Width
          carousel.classList.add("no-transition");
          carousel.scrollLeft = carousel.offsetWidth + 44;
          carousel.classList.remove("no-transition");
      }


      const dragStop = () => {
        if (window.innerWidth <= 768) {
          return;
        }

        this.settingSlider.isDragging = false;
        carousel.classList.remove("dragging");
      }

      const debouncedResizeHandler = debounce(handleWindowResize, 300);
      document.addEventListener("mouseup", dragStop);
      window.addEventListener('resize', handleWindowResize);
      // this.autoPlay();
    },
    computed:{
    },
    methods:{
      onChangeSlider(arrow) {
        const carousel = this.$refs.carousel;
        if (arrow === 'right') {
          this.inActiveButton = 'right';
            // Width
          carousel.scrollLeft = carousel.scrollLeft + this.settingSlider.firstCardWidth;

          // carousel.scrollLeft = carousel.scrollLeft + this.settingSlider.firstCardWidth;

        }

        if (arrow === 'left') {
          this.inActiveButton = 'left';
            // Width
          carousel.scrollLeft = carousel.scrollLeft - this.settingSlider.firstCardWidth;
        }
          
          // carousel.scrollLeft = carousel.scrollLeft - this.settingSlider.firstCardWidth;
        
      },
      onChangeMbSlider(arrow) {
        const secondaryCarousel = this.$refs.secondaryCarousel;
        if (arrow === 'right') {
          this.inActiveButton = 'right';      
            // Height
          secondaryCarousel.scrollTop = secondaryCarousel.scrollTop + this.settingSlider.firstCardWidth;
          

          // carousel.scrollLeft = carousel.scrollLeft + this.settingSlider.firstCardWidth;

        } 
        
        if (arrow === 'left') {
          this.inActiveButton = 'left';
            // Height
          secondaryCarousel.scrollTop = secondaryCarousel.scrollTop - this.settingSlider.firstCardWidth;
          
          // carousel.scrollLeft = carousel.scrollLeft - this.settingSlider.firstCardWidth;
        }
      },
      onInfiniteScroll() {
        const carousel = this.$refs.carousel;
        const secondaryCarousel = this.$refs.secondaryCarousel;
        // If the carousel is at the beginning, scroll to the end

        if (window.innerWidth <= 768) {
          // Height
          if(secondaryCarousel.scrollTop === 0) {
            secondaryCarousel.classList.add("no-transition");
            secondaryCarousel.scrollTop = secondaryCarousel.scrollHeight - (2 * secondaryCarousel.offsetHeight + 44);
            secondaryCarousel.classList.remove("no-transition");
          }
            // If the carousel is at the end, scroll to the beginning
          else if(Math.ceil(secondaryCarousel.scrollTop) === secondaryCarousel.scrollHeight - secondaryCarousel.offsetHeight) {
            secondaryCarousel.classList.add("no-transition");
            secondaryCarousel.scrollTop = secondaryCarousel.offsetHeight + 44;
            secondaryCarousel.classList.remove("no-transition");
          }

        } else {

          // Width
          if(carousel.scrollLeft === 0) {
            carousel.classList.add("no-transition");
            carousel.scrollLeft = carousel.scrollWidth - (2 * carousel.offsetWidth) + 40;
            carousel.classList.remove("no-transition");
          }
            // If the carousel is at the end, scroll to the beginning
          else if(Math.ceil(carousel.scrollLeft) === carousel.scrollWidth - carousel.offsetWidth) {
            
            carousel.classList.add("no-transition");
            carousel.scrollLeft = carousel.offsetWidth + 40;
            carousel.classList.remove("no-transition");
          }
        }

        // Clear existing timeout & start autoplay if mouse is not hovering over carousel
      },
      onDragStart(event) {
        const carousel = this.$refs.carousel;

        this.settingSlider.isDragging = true;
        carousel.classList.add("dragging");
          // Records the initial cursor and scroll position of the carousel
        console.log(event.pageX)
        this.settingSlider.startX = event.pageX;
        this.settingSlider.startScrollLeft = carousel.scrollLeft;
      },
      onDragging(event) {
        const carousel = this.$refs.carousel;
        // if isDragging is false return from here
        if (!this.settingSlider.isDragging) {
          return;
        }
        // Updates the scroll position of the carousel based on the cursor movement
        carousel.scrollLeft = this.settingSlider.startScrollLeft - (event.pageX - this.settingSlider.startX);
      },
      clearCurTimeout() {
        clearTimeout(this.timeoutId);
      },
      autoPlay() {
        const carousel = this.$refs.carousel;
        if(window.innerWidth < 800 || !this.settingSlider.isAutoPlay) return;

        // if window is smaller than 800 or isAutoPlay is false
        // Autoplay the carousel after every 2500 ms

        this.timeoutId = setTimeout(() => carousel.scrollLeft += this.settingSlider.firstCardWidth, 2500);
      },
      onPreventDrag(event) {
        event.preventDefault();
      }
    }
  }

  Vue.createApp(DB_SF_Page_About_Us_Options).mount('.db-page--about-us')
</script>